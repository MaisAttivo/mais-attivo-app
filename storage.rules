rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function isSignedIn() { return request.auth != null; }
    function isCoach() {
      return isSignedIn() && (
        request.auth.token.role == 'coach' ||
        request.auth.token.role == 'admin' ||
        request.auth.token.coach == true ||
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role in ['coach', 'admin']
      );
    }
    function isSelf(uid) { return isSignedIn() && request.auth.uid == uid; }
    function isPdf() { return request.resource.contentType == 'application/pdf'; }

    // Plans (PDF)
    match /plans/{uid} {
      allow list: if isCoach() || isSelf(uid);
    }
    match /plans/{uid}/{fileName} {
      allow read: if isCoach() || isSelf(uid);
      allow write: if isCoach() && isPdf() && fileName.matches('.*\\.pdf$');
    }

    // Deny everything else
    match /{path=**} { allow read, write: if false; }
  }
}
