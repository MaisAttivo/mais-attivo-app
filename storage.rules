rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    function signedIn() { return request.auth != null; }
    function isUser(userId) { return signedIn() && request.auth.uid == userId; }
    function isCoachOrAdmin() {
      return signedIn() && (
        request.auth.token.role in ['coach','admin'] ||
        request.auth.token.coach == true ||
        (exists(/databases/$(default)/documents/users/$(request.auth.uid)) &&
          get(/databases/$(default)/documents/users/$(request.auth.uid)).data.role in ['coach','admin'])
      );
    }

    // Fotos do cliente: users/{uid}/photos/*
    match /users/{userId}/photos/{filename} {
      // Ler: cliente ou coach/admin
      allow read: if isUser(userId) || isCoachOrAdmin();

      // Escrever: cliente com consentimento OU override do coach; coach/admin sempre pode
      allow write: if (
        isUser(userId) && (
          get(/databases/$(default)/documents/users/$(userId)).data.imageUseConsent == true ||
          get(/databases/$(default)/documents/users/$(userId)).data.imageUploadAllowedByCoach == true
        )
      ) || isCoachOrAdmin();
    }

    // InBody: coach/admin ou o pr√≥prio podem ler; escrever apenas coach/admin
    match /users/{userId}/inbody/{filename} {
      allow read: if isUser(userId) || isCoachOrAdmin();
      allow write: if isCoachOrAdmin();
    }

    // Planos PDFs
    match /plans/{userId}/{filename} {
      allow read: if isUser(userId) || isCoachOrAdmin();
      allow write: if isCoachOrAdmin();
    }
  }
}
